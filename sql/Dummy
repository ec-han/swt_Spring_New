-- swt 프로젝트 Dummy 데이터 생성

-- 회원 TABLE 생성

DROP TABLE tbl_member CASCADE CONSTRAINTS;
CREATE TABLE tbl_member(
    username VARCHAR2(45) PRIMARY KEY,
    password VARCHAR2(80) NOT NULL,
    name VARCHAR2(30) NOT NULL,
    bir_yy NUMBER(4, 0),
    bir_mm NUMBER(2, 0),
    bir_dd NUMBER(2, 0),
    phone VARCHAR2(30) NOT NULL,
    email VARCHAR(50) NOT NULL,
    zipcode VARCHAR2(20) NOT NULL,
    addr1 VARCHAR2(200) NOT NULL,
    addr2 VARCHAR2(200) NOT NULL,
    mtype VARCHAR2(10) DEFAULT '2' NOT NULL,
    regdate DATE DEFAULT SYSDATE
);

SELECT * FROM tbl_member;
INSERT INTO tbl_member(username,password,name,bir_yy,bir_mm,bir_dd,phone,email,zipcode,addr1,addr2)
VALUES('user01','1234','한은체',1994,01,01,01011112222,'user01@gmail.com','61241','광주 북구 유동 57-47','1층');
INSERT INTO tbl_member(username,password,name,bir_yy,bir_mm,bir_dd,phone,email,zipcode,addr1,addr2)
VALUES('user02','1234','박선미',1994,01,02,01022223333,'user02@gmail.com','61241','광주 북구 유동 57-47','5층');
INSERT INTO tbl_member(username,password,name,bir_yy,bir_mm,bir_dd,phone,email,zipcode,addr1,addr2)
VALUES('user03','1234','유수지',1994,01,02,01033334444,'user03@gmail.com','61241','광주 북구 유동 57-47','2층');
INSERT INTO tbl_member(username,password,name,bir_yy,bir_mm,bir_dd,phone,email,zipcode,addr1,addr2)
VALUES('user04','1234','황수연',1994,01,03,01044445555,'user04@gmail.com','61241','광주 북구 유동 57-47','3층');

INSERT INTO tbl_member(id,pw,name,bir_yy,bir_mm,bir_dd,phone,email,zipcode,addr1,addr2,mtype)
VALUES('admin','1234','한은체',1994,07,18,01011112222,'eunchehan@gmail.com','61241','광주 북구 유동 57-47','1층','1');

SELECT name, mtype FROM tbl_member
		WHERE id='user01' AND pw='1234';

COMMIT;

-- 권한 정보 테이블 
DROP TABLE tbl_authorities;
CREATE TABLE tbl_authorities(
    username VARCHAR2(45) PRIMARY KEY,
    authority VARCHAR2(45) NOT NULL
);


-- 상품 sequence
DROP SEQUENCE seq_product;
CREATE SEQUENCE seq_product
START WITH 1 
INCREMENT BY 1
NOCYCLE;

-- 상품 테이블
SELECT * FROM tbl_product;
-- TABLE도 tbl_하고 이름에 붙여주는 게 좋음 
DROP TABLE tbl_product;
CREATE TABLE tbl_product(
    p_code VARCHAR2(5) PRIMARY KEY,
    p_type VARCHAR2(50) NOT NULL,
    p_name VARCHAR2(100) NOT NULL,
    p_price NUMBER NOT NULL,
    p_img VARCHAR2(100),
    p_cnt NUMBER DEFAULT 0,
    p_good NUMBER DEFAULT 0,
    p_indate DATE DEFAULT SYSDATE
);

SELECT p_type, MAX(p_price) 최대가격, MIN(p_price) 최소가격
FROM tbl_product
GROUP BY p_type;


-- 15건 이상 
INSERT INTO tbl_product(p_code,p_type,p_name,p_price,p_img,p_cnt,p_good)
VALUES(seq_product.NEXTVAL,'TEA','얼 그레이 리저브',23000,'014001000002.jpg','20','5');

INSERT INTO tbl_product(p_code,p_type,p_name,p_price,p_img,p_cnt,p_good)
VALUES(seq_product.NEXTVAL,'TEA','NYC 브렉퍼스트',23000,'0140010000042.jpg','20','5');

INSERT INTO tbl_product(p_code,p_type,p_name,p_price,p_img,p_cnt,p_good)
VALUES(seq_product.NEXTVAL,'TEA','망고멜랑',23000,'0140010000052.jpg','30','7');

INSERT INTO tbl_product(p_code,p_type,p_name,p_price,p_img,p_cnt,p_good)
VALUES(seq_product.NEXTVAL,'TEA','썸머 피치',23000,'0140010000062.jpg','10','10');

INSERT INTO tbl_product(p_code,p_type,p_name,p_price,p_img,p_cnt,p_good)
VALUES(seq_product.NEXTVAL,'TEA','우바',23000,'0140010000072.jpg','35','3');

INSERT INTO tbl_product(p_code,p_type,p_name,p_price,p_img,p_cnt,p_good)
VALUES(seq_product.NEXTVAL,'TEA','썸머 후르츠',23000,'0140020000032.jpg','5','40');

INSERT INTO tbl_product(p_code,p_type,p_name,p_price,p_img,p_cnt,p_good)
VALUES(seq_product.NEXTVAL,'TEA','퓨어 그린',21000,'0140020000052.jpg','17','10');

INSERT INTO tbl_product(p_code,p_type,p_name,p_price,p_img,p_cnt,p_good)
VALUES(seq_product.NEXTVAL,'TEA','더블 민트',19000,'0140030000142.jpg','16','9');

INSERT INTO tbl_product(p_code,p_type,p_name,p_price,p_img,p_cnt,p_good)
VALUES(seq_product.NEXTVAL,'TEA','로얄 캐모마일',15000,'0140030000022.jpg','26','30');

INSERT INTO tbl_product(p_code,p_type,p_name,p_price,p_img,p_cnt,p_good)
VALUES(seq_product.NEXTVAL,'TEA SACHET','그레이트 화이트',19000,'0140060000152.jpg','15','8');

INSERT INTO tbl_product(p_code,p_type,p_name,p_price,p_img,p_cnt,p_good)
VALUES(seq_product.NEXTVAL,'TEA SACHET','망고 멜랑',19000,'0140060000202.jpg','26','12');

INSERT INTO tbl_product(p_code,p_type,p_name,p_price,p_img,p_cnt,p_good)
VALUES(seq_product.NEXTVAL,'TEA SACHET','NYC 브렉퍼스트',17000,'0140060000212.jpg','32','15');

INSERT INTO tbl_product(p_code,p_type,p_name,p_price,p_img,p_cnt,p_good)
VALUES(seq_product.NEXTVAL,'LATTE','타바론 밀크티 베이스 750ml',22000,'0140050000122.jpg','20','5');

INSERT INTO tbl_product(p_code,p_type,p_name,p_price,p_img,p_cnt,p_good)
VALUES(seq_product.NEXTVAL,'LATTE','타바론 티 리얼 시리즈 750ml',21000,'0140050000112.jpg','20','5');

INSERT INTO tbl_product(p_code,p_type,p_name,p_price,p_img,p_cnt,p_good)
VALUES(seq_product.NEXTVAL,'LATTE','타바론 티 리믹스750ml',25000,'0140050000052.jpg','20','5');

DELETE FROM tbl_product 
WHERE p_type='LATTE';
SELECT * FROM tbl_product;
DELETE FROM tbl_product;

SELECT * FROM tbl_product
WHERE rownum <= 5
ORDER BY p_good DESC;
-- BEST상품 5건 추출 
SELECT * 
FROM (SELECT * FROM tbl_product
      ORDER BY p_good DESC)
WHERE rownum <= 5;
-- 신상품 5건 추출
SELECT * 
FROM (SELECT * FROM tbl_product
      ORDER BY p_indate DESC)
WHERE rownum <= 5;

--위시리스트
DROP TABLE swt_wish;
CREATE TABLE swt_wish(
    p_code VARCHAR2(80) NOT NULL,
    username VARCHAR2(45) NOT NULL,
    FOREIGN KEY(p_code) REFERENCES tbl_product(p_code) ON DELETE CASCADE
);

SELECT a.*
FROM tbl_product a, swt_wish b
WHERE a.p_code = b.p_code AND b.username='user01';

SELECT a.p_code, a.p_type, a.p_name, a.p_price, a.p_img, b.amount, b.cart_id, a.p_price*b.amount money
FROM tbl_product a, swt_cart b
WHERE a.p_code = b.p_code AND b.username='user01';

--장바구니
DROP TABLE swt_cart;
CREATE TABLE swt_cart(
    cart_id NUMBER PRIMARY KEY,
    username VARCHAR2(45) NOT NULL,
    p_code VARCHAR2(80) NOT NULL,
    amount NUMBER DEFAULT 0,
    FOREIGN KEY(p_code) REFERENCES tbl_product(p_code) ON DELETE CASCADE
);
commit;
INSERT INTO swt_cart(cart_id, p_code, username, amount)
VALUES(1, 8, 'user01', 10);

SELECT * FROM swt_cart;

SELECT * FROM swt_cart
WHERE username = 'user01';

DELETE FROM swt_cart WHERE username='user01' AND cart_id='2';

SELECT a.*, c.lno as isempty
		FROM tbl_product a, swt_wish b, swt_cart c
		WHERE a.p_code = b.p_code and b.p_code=c.p_code(+) AND b.username='user01'
		ORDER BY a.p_code DESC;


SELECT * FROM swt_cart
WHERE username = 'user01';

UPDATE swt_cart
SET amount=1
WHERE username='user01' AND p_code='6';

commit;

-- 장바구니 총합 가격
SELECT SUM(a.p_price*amount) total
FROM tbl_product a, swt_cart b
WHERE a.p_code = b.p_code AND b.username='user01';


commit;



-- swt 게시판 테이블 
DROP SEQUENCE seq_board;
CREATE SEQUENCE seq_board
START WITH 1
INCREMENT BY 1;

DROP TABLE tbl_board CASCADE CONSTRAINTS;
CREATE TABLE tbl_board(
    bno NUMBER PRIMARY KEY,
    title VARCHAR2(200) NOT NULL,
    content VARCHAR2(4000) NOT NULL,
    writer VARCHAR2(30) NOT NULL,
    viewcnt NUMBER DEFAULT 0,
    replycnt NUMBER DEFAULT 0,
    goodcnt NUMBER DEFAULT 0,
    regdate DATE DEFAULT SYSDATE,
    ref NUMBER NOT NULL,
    re_step NUMBER NOT NULL,
    re_level NUMBER NOT NULL
);

SELECT * FROM tbl_board
ORDER BY bno DESC;
DELETE FROM tbl_board;

-- 10건 
INSERT INTO tbl_board(bno,title,content, writer, ref, re_step, re_level)
VALUES(seq_board.NEXTVAL, '테스트페이지입니다1','테스트','user01', seq_board.CURRVAL, 1, 0);
INSERT INTO tbl_board(bno,title,content, writer, ref, re_step, re_level)
VALUES(seq_board.NEXTVAL, '테스트페이지입니다2','테스트','user02', seq_board.CURRVAL, 1, 0);
INSERT INTO tbl_board(bno,title,content, writer, ref, re_step, re_level)
VALUES(seq_board.NEXTVAL, '테스트페이지입니다3','테스트','user03', seq_board.CURRVAL, 1, 0);
INSERT INTO tbl_board(bno,title,content, writer, ref, re_step, re_level)
VALUES(seq_board.NEXTVAL, '테스트페이지입니다4','테스트','user04', seq_board.CURRVAL, 1, 0);
INSERT INTO tbl_board(bno,title,content, writer, ref, re_step, re_level)
VALUES(seq_board.NEXTVAL, '테스트페이지입니다5','테스트','user01', seq_board.CURRVAL, 1, 0);
INSERT INTO tbl_board(bno,title,content, writer, ref, re_step, re_level)
VALUES(seq_board.NEXTVAL, '테스트페이지입니다6','테스트','user02', seq_board.CURRVAL, 1, 0);
INSERT INTO tbl_board(bno,title,content, writer, ref, re_step, re_level)
VALUES(seq_board.NEXTVAL, '테스트페이지입니다7','테스트','user03', seq_board.CURRVAL, 1, 0);

INSERT INTO tbl_board(bno,title,content, writer, ref, re_step, re_level)
VALUES(seq_board.NEXTVAL, '테스트페이지입니다8','테스트','user04', seq_board.CURRVAL, 1, 0);
INSERT INTO tbl_board(bno,title,content, writer, ref, re_step, re_level)
VALUES(seq_board.NEXTVAL, '테스트페이지입니다9','테스트','user01', seq_board.CURRVAL, 1, 0);
INSERT INTO tbl_board(bno,title,content, writer, ref, re_step, re_level)
VALUES(seq_board.NEXTVAL, '테스트페이지입니다10','테스트','user02', seq_board.CURRVAL, 1, 0);

INSERT INTO tbl_board(bno,title,content, writer, ref, re_step, re_level)
VALUES(seq_board.NEXTVAL, '테스트페이지입니다11','테스트','user02', seq_board.CURRVAL, 1, 0);
INSERT INTO tbl_board(bno,title,content, writer, ref, re_step, re_level)
VALUES(seq_board.NEXTVAL, '테스트페이지입니다12','테스트','user02', seq_board.CURRVAL, 1, 0);
INSERT INTO tbl_board(bno,title,content, writer, ref, re_step, re_level)
VALUES(seq_board.NEXTVAL, '테스트페이지입니다13','테스트','user02', seq_board.CURRVAL, 1, 0);

SELECT COUNT(*) FROM tbl_board;

SELECT *
FROM (SELECT rownum rnum, a.*
      FROM (SELECT *
            FROM tbl_board
            WHERE bno > 0
            ORDER BY ref DESC, re_step
            ) a
     ) WHERE rnum BETWEEN 1 AND 10
       ORDER BY rnum;
    
-- 1. 가장 안쪽에 있는 subquery: 전체 게시글을 최신순으로 조회
-- 2. 두 번째 subquery: 전체게시글 조회결과에 + rownum
-- 3. 가장 바깥쪽에 있는 select문: 조회된 결과에서 page에 출력할 10건의 게시글만 조회 


COMMIT;

-- swt 게시판 첨부파일 테이블
-- DRAG & DROP을 활용한 첨부파일
-- 첨부파일 이름은 uuid를 사용하기 때문에 중복 안됨 
DROP TABLE tbl_attach CASCADE CONSTRAINTS;
CREATE TABLE tbl_attach(
    fullname VARCHAR2(150) NOT NULL,
    bno NUMBER NOT NULL,
    regdate DATE DEFAULT SYSDATE
);
ALTER TABLE tbl_attach ADD CONSTRAINT pk_attach
PRIMARY KEY(fullname);

SELECT * FROM tbl_attach;
SELECT * FROM tbl_board;

ALTER TABLE tbl_attach
ADD CONSTRAINT fk_attach_bno
FOREIGN KEY(bno) REFERENCES tbl_board(bno)
ON DELETE CASCADE;
commit;

-- swt 댓글 테이블
DROP SEQUENCE seq_reply;
CREATE SEQUENCE seq_reply
START WITH 1
INCREMENT BY 1;

DROP TABLE tbl_reply;
CREATE TABLE tbl_reply(
    rno NUMBER PRIMARY KEY,
    content VARCHAR2(2000) NOT NULL,
    writer VARCHAR2(30) NOT NULL,
    regdate DATE DEFAULT SYSDATE,
    bno NUMBER NOT NULL
);

ALTER TABLE tbl_reply 
ADD CONSTRAINT tbl_reply_fk_bno
FOREIGN KEY(bno) REFERENCES tbl_board(bno) ON DELETE CASCADE;
-- 게시글 삭제되면 댓글도 연쇄삭제 됨 CASCADE: 연쇄 삭제할때 씀 
-- 참조하고 있을때 연쇄작용하게 함. 외래키로 반드시 묶여있어야 함

COMMIT;

DELETE FROM tbl_reply;
INSERT INTO tbl_reply(rno, content, writer, bno)
VALUES(seq_reply.NEXTVAL, '댓글1', 'user01', 10);
INSERT INTO tbl_reply(rno, content, writer, bno)
VALUES(seq_reply.NEXTVAL, '댓글2', 'user02', 10);
INSERT INTO tbl_reply(rno, content, writer, bno)
VALUES(seq_reply.NEXTVAL, '댓글3', 'user03', 10);

INSERT INTO tbl_reply(rno, content, writer, bno)
VALUES(seq_reply.NEXTVAL, '댓글4', 'user04', 9);
INSERT INTO tbl_reply(rno, content, writer, bno)
VALUES(seq_reply.NEXTVAL, '댓글5', 'user01', 9);

SELECT * FROM tbl_reply;
